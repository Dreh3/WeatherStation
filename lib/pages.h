//-------------------------------------
const char* graficos_html =
"HTTP/1.1 200 OK\r\n"
"Content-Type: text/html\r\n\r\n"
"<!DOCTYPE html>"
"<html lang=\"pt-BR\">"
"<head>"
"<meta charset=\"UTF-8\" />"
"<title>Gráficos - Monitor Pico W</title>"
"<script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>"
"<style>"
"body { font-family: sans-serif; background: #f0f2f5; margin: 0; padding: 20px; }"
".container { max-width: 800px; margin: auto; background: white; padding: 20px; border-radius: 12px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }"
"canvas { margin: 20px 0; max-width: 100%; }"
"h1 { text-align: center; }"
"a { display: block; text-align: center; margin-bottom: 20px; color: #4CAF50; text-decoration: none; font-weight: bold; }"
"</style>"
"</head>"
"<body>"
"<div class=\"container\">"
"<a href=\"/\">← Voltar</a>"
"<h1>Gráficos em Tempo Real</h1>"
"<canvas id=\"tempChart\"></canvas>"
"<canvas id=\"humChart\"></canvas>"
"<canvas id=\"pressChart\"></canvas>"
"</div>"
"<script>"
"const tempData = [], humData = [], pressData = [], labels = [];"
"const createChart = (ctxId, label, borderColor) => { return new Chart(document.getElementById(ctxId), { type: 'line', data: { labels, datasets: [{ label, data: [], borderColor, tension: 0.3, fill: false }] }, options: { responsive: true, scales: { x: { ticks: { autoSkip: true, maxTicksLimit: 10 } } } } }); };"
"const tempChart = createChart('tempChart', 'Temperatura (°C)', 'red');"
"const humChart = createChart('humChart', 'Umidade (%)', 'blue');"
"const pressChart = createChart('pressChart', 'Pressão (hPa)', 'green');"
"async function atualizarGraficos() {"
"try {"
"const res = await fetch('/dados');"
"const d = await res.json();"
"const hora = new Date().toLocaleTimeString();"
"if (labels.length > 20) { labels.shift(); tempData.shift(); humData.shift(); pressData.shift(); }"
"labels.push(hora);"
"tempData.push(d.temp.toFixed(2));"
"humData.push(d.hum.toFixed(2));"
"pressData.push(d.press.toFixed(2));"
"tempChart.data.labels = labels;"
"tempChart.data.datasets[0].data = tempData;"
"tempChart.update();"
"humChart.data.labels = labels;"
"humChart.data.datasets[0].data = humData;"
"humChart.update();"
"pressChart.data.labels = labels;"
"pressChart.data.datasets[0].data = pressData;"
"pressChart.update();"
"} catch (e) { console.error(\"Erro ao atualizar gráficos:\", e); }"
"}"
"setInterval(atualizarGraficos, 3000);"
"atualizarGraficos();"
"</script>"
"</body>"
"</html>";
//-----------------------------------



//Configurações para a interface WEB --------------------------------------------------
bool wifi_connection = false;  //armazena status do wi-fi
const char HTML_BODY[] = //página formatada
    "<!DOCTYPE html>\r\n"
    "<html lang=\"pt-BR\">\r\n"
    "<head>"
    "<meta charset=\"UTF-8\" />"
     "<title>Interface WEB</title>"
      "<style>"
        "body { font-family: sans-serif; background: #f0f2f5; margin: 0; padding: 20px; }"
        ".container { max-width: 800px; margin: auto; background: white; padding: 20px;"
            "border-radius: 12px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }"
        "h1, h2 { text-align: center; color: #292929; }"
        ".sensor { display: flex; justify-content: space-between; margin: 10px 0; font-size: 1.1em; }"
        "form label { font-size: 0.9em; margin-top: 10px; display: block; }"
        "form input { width: 100%; padding: 6px; font-size: 1em; margin-bottom: 10px;"
        "border: 1px solid #ccc; border-radius: 6px; }"
        "button { width: 100%; background: #4CAF50; color: white; padding: 10px; font-size: 1em;"
        "border: none; border-radius: 8px; cursor: pointer; }"
        "button:hover { background: #43a047; }"
        ".titulo-secao { margin-top: 30px; font-size: 1.1em; color: #555; text-align: center;"
        "border-top: 1px solid #ddd; padding-top: 15px; }"
      "</style>"
      "<script>"
       "window.onload = function () {"
        "function atualizar() {"
        "fetch('/dados').then(res => res.json()).then(d => {"
        "document.getElementById('temp').innerText =  d.temp != null ? d.temp.toFixed(2) : \"--\";"
        "document.getElementById('hum').innerText = d.hum != null ? d.hum.toFixed(2) : \"--\";"
        "document.getElementById('press').innerText = d.press != null ? d.press.toFixed(2) : \"--\";"
        "document.getElementById('a_tempMin').innerText = d.tempMin != null ? d.tempMin.toFixed(1) : \"--\";"
        "document.getElementById('a_tempMax').innerText = d.tempMax != null ? d.tempMax.toFixed(2) : \"--\";"
        "document.getElementById('a_tempOffset').innerText = d.tempOffset != null ? d.tempOffset.toFixed(1) : \"--\";"
        "document.getElementById('a_humMin').innerText = d.humMin != null ? d.humMin.toFixed(1) : \"--\";"
        "document.getElementById('a_humMax').innerText = d.humMax != null ? d.humMax.toFixed(1) : \"--\";"
        "document.getElementById('a_humOffset').innerText = d.humOffset != null ? d.humOffset.toFixed(1) : \"--\";"
        "document.getElementById('a_pressMin').innerText = d.pressMin != null ? d.pressMin.toFixed(1) : \"--\";"
        "document.getElementById('a_pressMax').innerText = d.pressMax != null ? d.pressMax?.toFixed(1) : \"--\";"
        "document.getElementById('a_pressOffset').innerText = d.pressOffset != null ? d.pressOffset?.toFixed(1) : \"--\";"
        "});"
        "}"
        "setInterval(atualizar, 1000);"
        "};"

        "function enviarConfig(event) {"
        "event.preventDefault();"
        "const form = event.target;"
        "const dados = {"
        "tempMin: parseFloat(form.tempMin.value),"
        "tempMax: parseFloat(form.tempMax.value),"
        "tempOffset: parseFloat(form.tempOffset.value),"
        "humMin: parseFloat(form.humMin.value),"
        "humMax: parseFloat(form.humMax.value),"
        "humOffset: parseFloat(form.humOffset.value),"
        "pressMin: parseFloat(form.pressMin.value),"
        "pressMax: parseFloat(form.pressMax.value),"
        "pressOffset: parseFloat(form.pressOffset.value)"
        "};"
        "fetch('/config', {"
        "method: 'POST',"
        "headers: {"
        "'Content-Type': 'application/json'"
        "},\n"
        "body: JSON.stringify(dados)"
        "})"
        ".catch(err => console.error(err));"
    "}"

        "</script>"

    "</head>"
    "<body>"
        "<div class=\"container\">"
        "<h1>Dados dos Sensores</h1>"
        "<div class=\"sensor\"> Temperatura: <span id=\"temp\">--</span> °C</div>"
        "<div class=\"sensor\"> Umidade: <span id=\"hum\">--</span> %</div>"
        "<div class=\"sensor\"> Pressão: <span id=\"press\">--</span> kPa</div>"
        "<div class=\"titulo-secao\">Limites e Calibração</div>"
        "<form onsubmit=\"enviarConfig(event)\">"
        "<label>Temp Min (Valor atual: <span id=\"a_tempMin\">--</span> °C)"
        "<input name=\"tempMin\" type=\"number\" step=\"0.1\"></label>"
        "<label>Temp Max (Valor atual: <span id=\"a_tempMax\">--</span> °C)"
        "<input name=\"tempMax\" type=\"number\" step=\"0.1\"></label>"
        "<label>Offset Temp (Valor atual: <span id=\"a_tempOffset\">--</span>)"
        "<input name=\"tempOffset\" type=\"number\" step=\"0.1\"></label>"
        "<label>Umid Min (Valor atual: <span id=\"a_humMin\">--</span> %)"
        "<input name=\"humMin\" type=\"number\" step=\"0.1\"></label>"
        "<label>Umid Max (Valor atual: <span id=\"a_humMax\">--</span> %)"
        "<input name=\"humMax\" type=\"number\" step=\"0.1\"></label>"
        "<label>Offset Umid (Valor atual: <span id=\"a_humOffset\">--</span>)"
        "<input name=\"humOffset\" type=\"number\" step=\"0.1\"></label>"
        "<label>Press Min (Valor atual: <span id=\"a_pressMin\">--</span> kPa)"
        "<input name=\"pressMin\" type=\"number\" step=\"0.1\"></label>"
        "<label>Press Max (Valor atual: <span id=\"a_pressMax\">--</span> kPa)"
        "<input name=\"pressMax\" type=\"number\" step=\"0.1\"></label>"
        "<label>Offset Pressão (Valor atual: <span id=\"a_pressOffset\">--</span>)"
        "<input name=\"pressOffset\" type=\"number\" step=\"0.1\"></label>"
        "<button type=\"submit\">Salvar</button>"
        "</form>"
        "<div class=\"titulo-secao\">Visualização</div>"
        "<div style=\"text-align: center; margin-top: 10px;\">"
        "<a href=\"graficos\" style=\"text-decoration: none; color: #4CAF50; font-weight: bold;\">"
        "Ver Gráficos</a>"
        "</div>"
      "</div>"
    "</body>"
    "</html>";
